/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "k8s.io/api/networking/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PodNetworkAttachmentLister helps list PodNetworkAttachments.
// All objects returned here must be treated as read-only.
type PodNetworkAttachmentLister interface {
	// List lists all PodNetworkAttachments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PodNetworkAttachment, err error)
	// PodNetworkAttachments returns an object that can list and get PodNetworkAttachments.
	PodNetworkAttachments(namespace string) PodNetworkAttachmentNamespaceLister
	PodNetworkAttachmentListerExpansion
}

// podNetworkAttachmentLister implements the PodNetworkAttachmentLister interface.
type podNetworkAttachmentLister struct {
	indexer cache.Indexer
}

// NewPodNetworkAttachmentLister returns a new PodNetworkAttachmentLister.
func NewPodNetworkAttachmentLister(indexer cache.Indexer) PodNetworkAttachmentLister {
	return &podNetworkAttachmentLister{indexer: indexer}
}

// List lists all PodNetworkAttachments in the indexer.
func (s *podNetworkAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.PodNetworkAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodNetworkAttachment))
	})
	return ret, err
}

// PodNetworkAttachments returns an object that can list and get PodNetworkAttachments.
func (s *podNetworkAttachmentLister) PodNetworkAttachments(namespace string) PodNetworkAttachmentNamespaceLister {
	return podNetworkAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PodNetworkAttachmentNamespaceLister helps list and get PodNetworkAttachments.
// All objects returned here must be treated as read-only.
type PodNetworkAttachmentNamespaceLister interface {
	// List lists all PodNetworkAttachments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PodNetworkAttachment, err error)
	// Get retrieves the PodNetworkAttachment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PodNetworkAttachment, error)
	PodNetworkAttachmentNamespaceListerExpansion
}

// podNetworkAttachmentNamespaceLister implements the PodNetworkAttachmentNamespaceLister
// interface.
type podNetworkAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PodNetworkAttachments in the indexer for a given namespace.
func (s podNetworkAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PodNetworkAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodNetworkAttachment))
	})
	return ret, err
}

// Get retrieves the PodNetworkAttachment from the indexer for a given namespace and name.
func (s podNetworkAttachmentNamespaceLister) Get(name string) (*v1alpha1.PodNetworkAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("podnetworkattachment"), name)
	}
	return obj.(*v1alpha1.PodNetworkAttachment), nil
}
